Stage 1 - original dataset

   Issue writeup:
   	RowSystem -> CurrentMonthRowSystem
        CurrentMonthRowSystem can save to DefaultDatabase
        DataframeEmitter
   docstrings + document three versions + comment on architectute (also in issue) + make them runable/testable [6:08 24.01.2016]
   feature: make rs a package [6:08 24.01.2016 ...]
   feature: make_headers(): show headers which have + do not have label - diagnose completeness of import [6:08 24.01.2016]
   tests:
      use testdatabase in test_db.py +       tests interfere with default database, .save initiated somewhere
          6:08 24.01.2016
      examples - usage.py + test of usage of kep.py (tests for get_df, get_ts)
          6:08 24.01.2016 
      disable unfinished tests in rs
          6:08 24.01.2016

Stage 2.1 - modified dataset
   seasonality

Stage 2.2 - extra indicators
   oil price - brent
   use other APIs for extra data 

Stage 2.3 - longer history

Stage 3 - excercises
   изучите, постройте графики, каких не хватает, снимите сезонность
   корреляционная матрица остатков после снятия тренда 

   Вопросы:
      инфляция + ЦБ + регрессия монетарная/немонетарная
      зависят ли доходы бюджета от цены на нефть?
      что определяет расходы потербителей?   
      от чего зависит объем инвестиций в основной капитал?
   
Stage 4 - representation
   2 graphs per page


MAYDO:
~ add __repr__() to AdminKEP, see __repr__ for Rowsystem, maybe move it to emitter class
~ get feedback on stable version (naming, algorightms, program structure, whatever catches eye)
~ replicate test_mwe in tests
~ hide import dataset + alternative import 

WONTFIX / NOT CONSIDERED
# __init__.py access fucntions from AdminKEP
# after tests AdminKEP is overwritten!!!!
# AdminKEP.updates gives no varinfo 
# all variables documented in separate file 

DONE
+ detect no Word is installed and to not do not invoke reading doc file in word.py
+ error: fiscal rows - gov.consolided.deficit not imported
      --  labels do not quarantee proper data in dataset
      --  rs.dicts(varname = 'GOV_CONSOLIDATED_...')
      --  assert sum of values does not equal zero
      --  must use rs.Full_rows to see an error
+ shorthand AdminKEP().update method
+ change varnames table + write it in xls
+ test.bat 
+ print in two columns
+ plots.py: AdminKEP().save_pdf(), AdminKEP().save_png()
+ save.py: AdminKEP().save_xl(), AdminKEP.save_csv()
+ changed: rs.rows and rs.rowsystem[i].['string'] are duplicates
+ fiscal rows
+ test to compare dfa from rowsystem and kep - script in root 
  - 20:16 14.01.2016 ... 20:53 14.01.2016
+ make_csv() from word add to classes 
  - 20:59 14.01.2016 ... 21:18 14.01.2016
  - extra output on call 
+ temp_query_labels.py + query labels will allow test of import 
+ rename AdminKEP() 
+ fixed one error in tests test_datafolder_objects()
+ var coverage printed